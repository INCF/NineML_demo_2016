<?xml version='1.0' encoding='UTF-8'?>
<NineML xmlns="http://nineml.net/9ML/1.0">
  <Dimension i="1" name="current"/>
  <ComponentClass name="BrunelIaF">
    <AnalogSendPort dimension="time" name="refractory_end"/>
    <AnalogSendPort dimension="voltage" name="v"/>
    <AnalogReducePort operator="+" dimension="current" name="i_synaptic"/>
    <EventSendPort name="spike_output"/>
    <Parameter dimension="time" name="refractory_period"/>
    <Parameter dimension="time" name="tau"/>
    <Parameter dimension="resistance" name="R"/>
    <Parameter dimension="voltage" name="v_threshold"/>
    <Parameter dimension="voltage" name="v_reset"/>
    <Dynamics>
      <Regime name="refractory">
        <OnCondition target_regime="subthreshold">
          <Trigger>
            <MathInline>t &gt; refractory_end</MathInline>
          </Trigger>
        </OnCondition>
      </Regime>
      <Regime name="subthreshold">
        <TimeDerivative variable="v">
          <MathInline>(R*i_synaptic - v)/tau</MathInline>
        </TimeDerivative>
        <OnCondition target_regime="refractory">
          <Trigger>
            <MathInline>v &gt; v_threshold</MathInline>
          </Trigger>
          <OutputEvent port="spike_output"/>
          <StateAssignment variable="refractory_end">
            <MathInline>refractory_period + t</MathInline>
          </StateAssignment>
          <StateAssignment variable="v">
            <MathInline>v_reset</MathInline>
          </StateAssignment>
        </OnCondition>
      </Regime>
      <StateVariable dimension="time" name="refractory_end"/>
      <StateVariable dimension="voltage" name="v"/>
    </Dynamics>
  </ComponentClass>
  <Dimension i="-2" l="2" m="1" t="-3" name="resistance"/>
  <Dimension i="-1" l="2" m="1" t="-3" name="voltage"/>
  <Dimension name="time" t="1"/>
</NineML>
